Functions and addresses declared payable can receive ether into the contract.
e.g  
    1. address payable public owner;     // Payable address can receive Ether
    
    2. constructor() payable {    // Payable constructor can receive Ether
        owner = payable(msg.sender);
    }
     
    3. function deposit() public payable {} // Function to deposit Ether into this contract.
                                            // Call this function along with some Ether.
                                            // The balance of this contract will be automatically updated.


If you call simple function(without payable keyword) with some ether, it will throw an error
// Call this function along with some Ether.
// The function will throw an error since this function is not payable.
function abc() public {}



pragma solidity >=0.5.0 < 0.9.0;

contract pay{
    address payable user;
    function payEther() public payable {
        // We can pay some amount to the deployer of this contract by this function
        user = payable(msg.sender);
    }
    function getBalance() public view returns(uint){
        return address(this).balance;
    }
    function sendEther() public {
        // Sending ethers form this account to another(user(
        user.transfer(1 ether);
    }
}
