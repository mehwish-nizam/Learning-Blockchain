Functions and addresses declared payable can receive ether into the contract.
e.g  
    1. address payable public owner;     // Payable address can receive Ether
    
    2. constructor() payable {    // Payable constructor can receive Ether
        owner = payable(msg.sender);
    }
     
    3. function deposit() public payable {} // Function to deposit Ether into this contract.
                                            // Call this function along with some Ether.
                                            // The balance of this contract will be automatically updated.


If you call simple function(without payable keyword) with some ether, it will throw an error
// Call this function along with some Ether.
// The function will throw an error since this function is not payable.
function abc() public {}



pragma solidity >=0.5.0 < 0.9.0;

contract Payable{
    address payable public contractAccount;
    constructor() payable {
        contractAccount = payable(msg.sender);
    }
    function getContractBalance() public view returns (uint256) {
        return address(this).balance;
    } 
    function recieveEtherToContractAccount() public payable{
        //Call this function with some ether. The ethers will be added to contract's account
    }
    function transferEther(address payable toAccount, uint256 amount ) public {
        //Call this function to transfer ethers from contract's account to other account
        toAccount.transfer(amount);
    }  
}
